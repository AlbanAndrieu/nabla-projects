<?xml version="1.0" encoding="UTF-8"?>
  <document>
      <properties>
          <title>
              Nabla : Development Guide : Resource Service
          </title>
      </properties>
      <body>
          <section name="Service for loading resources in the applications">

              <subsection name="Objectives">
                  <p>
                      Nabla provides a base implementation for internal services to
                      applcations, allowing them to load their resources.
                      For example , the calendar plugin manages agendas and has an
                      <code>AgendaService</code> service which enables it to load resources,
                      in this case from agenda by means of an identfier.
                  </p>
                  <p>
                      The aims of this base implementation called <em>Resource Service</em> are to provide :
                 </p>
                 <p>
                      <ul>
                          <li>
                              An abstraction layer as long as the loading strategy od resources.
                              These resources can be loaded from files, database etc..
                              Each loading strategy refers to an implementation of
                              a <code>ResourceLoader</code>. It is possible to combine
                              many loading strategies.
                          </li>
                          <li>
                              An integrated cache to optimize resource access.
                              The cache of each service can be administered from the
                              <em>Cache Management</em> feature of Nabla.
                          </li>
                          <li>
                              Configuration facilities of the service (name, cache activation, ... )
                              based upon property files.

                          </li>
                      </ul>
                  </p>
                  <p>
                        Here is the class diagram of the API :
                  </p>
                  <p>
                      <center>
                          <img src="images/resource_service.gif" />
                      </center>
                  </p>
              </subsection>
              <subsection name="Implementation of ResourceService" >
                  <p>
                      Here is a minimal implementation of a service under a <em>singleton</em> form.
                  </p>
                  <p>
                 <div class="source">
                   <pre>
public class MyResourceService extends ResourceService
{
    private static MyResourceService _singleton = new MyResourceService
    private static final String PROPERTY_NAME = "myplugin.service.name";
    private static final String PROPERTY_CACHE = "myplugin.service.cache";
    private static final String PROPERTY_LOADERS = "myplugin.service.loaders";

    /**
     * Private constructor
     */
    private MyResourceService
    {
        super();
        setCacheKey( PROPERTY_CACHE );
        setNameKey( PROPERTY_NAME );
    }

    /**
     * Returns the instance of the singleton
     *
     * @return The instance of the singleton
     */
    public static MyResourceService getInstance()
    {
        return _singleton;
    }

    /**
     * Returns the property key that contains the loaders list
     * @return A property key
     */
    protected String getLoadersProperty(  )
    {
        return PROPERTY_LOADERS;
    }

    /**
     * Returns the Resource corresponding to the given name
     *
     * @param strResourceName The resource name
     * @return the Resource corresponding to the given name
     */
    public MyResource getMyResource( String strResourceName )
    {
        return  ( MyResource ) getResource( strResourceName );
    }
              </pre>
                  </div>
                  </p>
                  <p>
                      La configuration du service se fait dans le fichier properties.
                      Les valeurs de base à configurer sont :
                  </p>
                  <p>
                      <table>
                          <tr>
                              <th>Elément de configuration</th>
                              <th>Exemple dans le fichier properties</th>
                          </tr>
                          <tr>
                              <td>Nom du service</td>
                              <td><code>myplugin.service.name=Plugin MyPlugin - MyResources Loading Service</code></td>
                          </tr>
                          <tr>
                              <td>Activation du cache</td>
                              <td><code>myplugin.service.cache=true</code></td>
                          </tr>
                          <tr>
                              <td>Liste des loaders</td>
                              <td><code>myplugin.service.loaders=com.mycompany.myapp.service.MyResourceLoader</code></td>
                          </tr>
                      </table>
                  </p>
              </subsection>
              <subsection name="Implémentation d'un ResourceLoader">
                  <p>
                      L'implémentation minimum d'un <code>ResourceLoader</code> est la suivante :
                  </p>
                  <p>
                      <div class="source">
                          <pre>
import com.nabla.project.portal.service.resource.Resource;
import com.nabla.project.portal.service.resource.ResourceLoader;

import java.util.ArrayList;

/**
 * MyResourceLoader
 */
public class MyResourceLoader implements ResourceLoader
{

    /**
     * Implementation of the ResourceLoader interface
     * @return A collection of resources
     */
    public Collection getResources(  )
    {
        // Build a collection of all resources available by this loader
        ArrayList listResources = new ArrayList(  );
        ...
        return listResources
    }

    /**
     * Implementation of the ResourceLoader interface
     * @param strId The resource Id
     * @return The Resource
     */
    public Resource getResource( String strId )
    {
        ...
    }
}                          </pre>
                      </div>
                  </p>
              </subsection>
              <subsection name="Centralized cache management">
                 <p>
                     Here is a centralized view of cache management of the Nabla's Administration module
                     including Resource Services.
                 </p>
                 <p>
                      <center>
                          <img src="images/manage_caches.gif" />
                      </center>
                  </p>
              </subsection>
          </section>
      </body>
  </document>
