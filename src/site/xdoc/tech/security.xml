<?xml version="1.0" encoding="UTF-8"?>
  <document>
   <properties>
    <title>
      Nabla : Guide de développement : Gestion de la sécurité
    </title>
   </properties>
  <body>
    <section name="Gestion de la sécurité - SSO - MyNabla">
        <p>
           Plusieurs API ont été mises en place à partir de la version 1.1 de Nabla
           pour gérer la sécurité des accès aux ressources du portail.
           La principale mise en oeuvre est faite par le plugin <strong>MyNabla</strong> qui réalise de
           manière modulaire l'authentification et la gestion des rôles associés aux
           utilisateurs authentifiés du site. L'objectif de cette API est de fournir
           un dispostif de « SSO » (Single Sign On), c'est à dire une authentification
           unique des utilisateurs partagée par toutes les applications. Ceci signifie
           que toute application du portail pourra
           vérifier que l'utilisateur courant est identifié et accéder à ses rôles.
           Outre l'authentification des utilisateurs, ces API permettent la réalisation
           d'applications basées sur des rôles : espaces privés, personalisation,
           préférences, rôles applicatifs, ...
        </p>

        <subsection name="API des modules d’authentification">
           <p>
              La gestion de l’authentification est modulaire et
              paramétrable, de manière à supporter plusieurs implémentations
              dont voici une liste non exhaustive :
           </p>
           <p>
              <ul>
                  <li>annuaire LDAP (<code>LDAPAuthentication</code>)</li>
                  <li>base de données interne (<code>BaseAuthentication</code>)</li>
                  <li>authentification déléguée au serveur Web (ex: Tomcat)</li>
               </ul>
           </p>
           <p>
              L’ensemble des implémentations doit respecter l’interface
              <code>com.nabla.project.portal.service.security.NablaPortalAuthentication</code>.
           </p>
           <p>
               On distingue deux sous-ensembles d’implémentations :
           </p>
           <p>
              <ul>
                  <li>l’authentification est assurée au niveau de Nabla.</li>
                  <li>l’authentification est réalisée en amont de Nabla (ex : serveur web ou WSSO).</li>
              </ul>
           </p>
           <p>
              Une authentification assurée par Nabla a les
              caractéristiques suivantes :
           </p>
           <p>
              <ul>
                 <li>elle doit prévoir des méthodes de connexion/déconnexion (<code>login</code> / <code>logout</code>).</li>
                 <li>elle spécialise la classe abstraite <code>com.nabla.project.plugins.mynabla.authentication.PortalAuthentication</code>.</li>
              </ul>
           </p>
           <p>
              Une authentification basée sur un système amont
              d’authentification disposera quant à elle des caractéristiques
              suivantes :
           </p>
           <p>
              <ul>
                  <li>elle ne doit pas prévoir des méthodes de connexion /déconnexion puisque celles-ci sont assurées par le dispositif
                   externe situé en amont.</li>
                  <li>elle spécialise la classe abstraite <code>com.nabla.project.plugins.mynabla.authentication.ExternalAuthentication</code>.</li>
              </ul>
           </p>
           <p>
              <center>
                      <img src="images/security002.gif" />
              </center>
           </p>

         </subsection>
         <subsection name="API des utilisateurs et gestion des comptes">
             <p>
                A chaque système d’authentification peut être associé
                un modèle d’utilisateur qui doit implémenter le modèle
                minimal défini par l’interface
                <code>com.nabla.project.portal.service.security.NablaUser</code>.
             </p>
             <p>
                 Les implémentations notamment prévues sont :
             </p>
             <p>
                <ul>
                    <li><code>LDAPUser</code></li>
                    <li><code>BaseUser</code></li>
                </ul>
             </p>
             <p>
                Ces implémentations ne font pas partie du noyau, elles
                sont disponibles dans le plugin "mynabla" sous le
                paquetage
                <code>com.nabla.project.plugins.mynabla.modules.*</code>.
             </p>
             <p>
                La façon dont ces modèles d’utilisateurs délivrent les
                informations concernant l’utilisateur se rapproche du
                modèle proposé par la spécification JSR 168, basée
                elle-même sur celle de la <a href="http://www.w3c.org/TR/P3P">Platform for Privacy
                Preferences 1.0</a> réalisée par le W3C. Ainsi les noms et
                prénoms se récupèrent à partir des clés
                <code>user.given.name</code> et <code>user.given.family</code>. Les
                mêmes noms d'attributs sont proposés par les OASIS Web
                Services for Remote Portlets Technical Committee. <a href=
                "attributes.html">Voir la liste des attributs</a>
             </p>
             <p>
              <center>
                 <img src="images/security003.gif" />
              </center>
             </p>
              <p>
                 Concernant la gestion des comptes des utilisateurs,
                 plusieurs modes sont possibles :
             </p>
              <p>
                <ul>
                    <li>
                         l’utilisateur ne peut pas créer lui-même un compte.
                         La création du compte doit alors être réalisée au niveau
                         de l’annuaire soit par une fonction d’administration intégrée
                         à Nabla soit par un dispositif autre.
                    </li>
                    <li>
                         l’utilisateur peut se créer un compte sans nécessiter
                         l’intervention des administrateurs du site. Dans cette
                         situation, l’écran de login affichera un lien vers la page
                         de création d’un nouveau compte.
                    </li>
                </ul>
             </p>
             <p>
                Dans les deux situations, il sera possible pour
                l’utilisateur identifié d’accéder à une page optionnelle et
                paramétrable permettant de visualiser les informations du
                compte. A partir de cette page et en fonction des choix de
                gestion des comptes il est envisageable d’ajouter des
                fonctions de changement de mot de passe ou de modification
                des informations personnelles.
             </p>
             <p>
                Concernant les rôles associés aux utilisateurs, ils
                correspondent à la description faite dans la spécification
                Java Servlet 2, c’est à dire une notion abstraite définie
                par une application qui, associée à un utilisateur ou à un
                groupe d’utilisateur, permet de définir une politique de
                sécurité.
             </p>
              <p>
                <strong>Remarque importante</strong> : selon le système d’authentification
                utilisé, l’accès à l’ensemble des rôles n’est pas toujours
                possible. Par exemple, le système d’authentification basé
                sur le serveur web ne permet que de vérifier qu’un
                utilisateur dispose bien d’un rôle donné par le biais de la
                méthode <code>isUserInRole</code>, mais la liste des autres
                rôles n’est pas accessible.
             </p>
         </subsection>

        <subsection name="Le nouveau service de sécurité SecurityService" >

              <p>
                 Un nouveau service a été ajouté au noyau de Nabla
                 pour assurer les fonctions de gestion des utilisateurs. Ce
                 service est le point d’entrée pour tous les composants :
                 plugins, portlets ou applications désirant obtenir
                 l’identité de l’utilisateur courant.
              </p>
               <p>
                  <center>
                          <img src="images/security004.gif" />
                  </center>
               </p>
               <p>
                      La principale méthode à utiliser est
                      <code>getRegisteredUser</code> qui permet d’obtenir l’identité
                      de l’utilisateur courant enregistré au niveau du
                      portail.
               </p>
               <p>
                     Une nouvelle exception <code>UserNotSignedException</code> a
                     été ajoutée à la signature des méthodes <code>getPage</code>
                     des interfaces <code>ContentService</code> et
                     <code>XPageApplication</code>, afin de signifier que
                     l’utilisateur doit être authentifié pour accéder au service
                     ou à l’application. Cette exception est catchée par la page
                     principale du site, <code>Portal.jsp</code>. Celle-ci
                     enregistre les paramètres courants de l’url, redirige
                     l’utilisateur vers la page de login paramétrée dans le
                     fichier <code>mynabla.properties</code>. Une fois
                     l’identification réalisée, l’utilisateur est redirigé vers
                     l’url à laquelle il tentait d’accéder initialement :
               </p>
                   <p>
                      <div class="source">
                   <pre>
 NablaUser user = SecurityService.getInstance().getRegisteredUser( request );
 if( user != null )
 {
  // The user is authenticated
  ...

 }
 else
 {
  // Throw an exception to force the user to login
  throw new UserNotSignedException();
 }</pre>
                       </div>
                    </p>
                    <p>
                       A l’instar des interfaces <code>HttpServletRequest</code> ou <code>
                       PortletRequest</code> (JSR 168), <code>SecurityService</code>
                       propose également les méthodes <code>getRemoteUser</code>,
                       <code>getUserPrincipal</code> et <code>isUserInRole</code>.
                    </p>
        </subsection>
     </section>
     <section name="Mise en oeuvre" >

        <subsection name="Paramétrage de l’authentification : Installation du plugin mynabla">
            <p>
               Le plugin doit être déployé comme n’importe quel
               plugin. Si le dispositif d’authentification utilise la base
               de données proposée par défaut, il faut installer la base
               <a href="shema.html"><code>nabla_users</code></a>, déclarer
               un pool de connexion vers cette base et associer ce pool au
               plugin dans l’interface de gestion des plugins.
            </p>
        </subsection>
        <subsection name="Paramétrage du plugin mynabla">
             <p>
                Les paramètres décrivant l’implémentation choisie sont
                définis dans le fichier de configuration
                <code>mynabla.properties</code> de Nabla grâce aux propriétés
                suivantes :
             </p>
             <p>
                <div class="source">
        <pre>
########################################################
#  Authentication management
mynabla.authentication.enable=true
mynabla.authentication.class=com.nabla.project.portal.service.security.LDAPAuthentication</pre>
                 </div>
              </p>
              <p>
                 Description des propriétés :
              </p>
              <p>
                 <ul>
                     <li><code>nabla.authentication.enable</code> : détermine si le mode d’authentification de l’instance de Nabla
                     reposera sur le SSO (obligatoire)</li>
                     <li><code>nabla.authentication.class</code> : détermine la classe qui implémente l’authentification choisie (à
                     renseigner si <code>nabla.authentication.enable</code> a
                     la valeur <code>true</code>).</li>
                 </ul>
              </p>
       </subsection>
    </section>
    <section name="Les objets de base du système">

        <subsection name="L’écran d’identification par défaut">
            <p>
               Dans le cas d’une identification interne au portail,
               le plugin MyNabla propose une page d’identification par
               défaut :
            </p>
            <p>
               <center>
                       <img src="images/security005.gif" />
               </center>
            </p>
            <p>
               Cette page est accessible à partir de l’adresse <a href="http://myhost/nabla/jsp/site/Portal.jsp?page=mynabla&amp;action=login">
               http://myhost/nabla/jsp/site/Portal.jsp?page=mynabla&amp;action=login</a>.
            </p>
            <p>
                Son adresse et celle du traitement du formulaire
                d’identification sont paramétrées dans le fichier
                <code>mynabla.properties</code> comme suit :
            </p>
            <p>
                <div class="source">
        <pre>
mynabla.url.login.page=Portal.jsp?page=mynabla&amp;action=login
mynabla.url.doLogin=./plugins/mynabla/DoMyNablaLogin.jsp</pre>
                 </div>
             </p>
         </subsection>
         <subsection name="Le portlet d’identification">
              <p>
                 Le plugin MyNabla propose un portlet
                 d’identification.
              </p>
              <p>
                 Lorsque l’utilisateur n’est pas identifié et que le système
                 d’authentification est de type Portail et non externe, le
                 portlet affiche le formulaire de connexion login/password
                 avec des liens facultatifs vers une page de création d’un
                 compte ou de récupération d’un mot de passe oublié.
              </p>
              <p>
                 <center>
                         <img src="images/security006.gif" />
                 </center>
              </p>
              <p>
                 Une fois l’utilisateur identifié, le portlet affiche un
                 message de bienvenue ainsi que le bouton de
                 déconnexion.
              </p>
              <p>
                <center>
                     <img src="images/security007.gif" />
                </center>
              </p>
         </subsection>

         <subsection name="Les pages par défaut de gestion du compte">
             <p>
                Les pages par défaut concernant la gestion de compte
                disponibles dans le plugin MyNabla sont les suivantes :
             </p>
             <p>
                <ul>
                    <li>création d’un nouveau compte</li>
                    <li>affichage des informations personnelles</li>
                    <li>mot de passe perdu</li>
                 </ul>
             </p>
             <p>
                Les implémentations proposées ne sont pas
                opérationnelles. Si de telles fonctions de gestion de
                compte sont à mettre en place, il faudra réaliser une
                XPageApp ou des JSP pour permettre leur
                implémentation.
             </p>
             <p>
                 Les fonctions telles que le changement de mot de passe ou
                 la modification des informations personnelles peuvent être
                 implémentées de la même manière et leur accès est à prévoir
                 au niveau de la page d’affichage des informations
                 personnelles.
             </p>
             <p>
                Le paramétrage des URL de ces fonctions est réalisé dans le
                fichier <code>mynabla.properties</code>. L’exemple suivant
                montre le paramétrage d’une implémentation réalisée avec
                une XPageApp nommée <code>account_manager</code> :
             </p>
             <p>
                <div class="source">
        <pre>
mynabla.url.createAccount.page=Portal.jsp?page=account_manager&amp;action=createAccount
mynabla.url.viewAccount.page=Portal.jsp?page= account_manager&amp;action=viewAccount
mynabla.url.lostPassword.page=Portal.jsp?page= account_manager&amp;action=lostPassword</pre>
                 </div>
              </p>
           </subsection>
        </section>

        <section name="Contrôle de l’authentification pour les applications">
            <p>
                Il est possible de soumettre l'ensemble des accès au portail à une
                authentification. Dans ce cas de figure, aucune page ou application
                n'est accessible à un utilisateur non identifié.
            </p>
            <p>
                Pour mettre en oeuvre ce mode de fonctionnement il faut positionner
                à <code>true</code> la propriété suivante dans le fichier
                <code>mynabla.properties</code> :
            </p>
            <p>
                <div class="source">
                    <pre>
# Only authenticated users can access to the portal
mynabla.portal.authentication.required=true
                    </pre>
                </div>
            </p>
        </section>
        <section name="L’authentification pour les applications">
            <subsection name="L'interface XPageSecureApplication">
                <p>
                   Chaque application peut, par le biais du plugin dans lequel
                   elle est packagée, définir définir si elle requiert ou non
                   une authentification.
                </p>
                <p>
                   Un nouveau paramètre est utilisé dans le fichier de
                   définition XML du plugin, par la balise
                   <code>application-security-model</code> :
                </p>
                <p>
                   <div class="source">
<pre>
   &lt;application&gt;
     &lt;application-class&gt;com.nabla.project.plugins.securedtest.SecuredTestApp&lt;/application-class&gt;
     &lt;application-security-model&gt;1&lt;/application-security-model&gt;
   &lt;/application&gt;</pre>
                   </div>
               </p>
               <p>
                      Les valeurs possibles de ce paramètre sont à ce jour :
               </p>
               <p>
                  <ul>
                       <li>0 : aucune authentification n’est requise pour accéder
                           à l’application (les <code>XPageApp</code> de la
                       version 1.0 fonctionnent dans ce modèle par défaut).</li>
                       <li>1 : une authentification est obligatoire.</li>
                  </ul>
               </p>
               <p>
                  Les <code>XPageApps</code> fonctionnant dans ce modèle
                  doivent implémenter l’interface <code>XPageSecureApplication</code>.
               </p>
               <p>
                  Si ce paramètre n’est pas présent pour le plugin (cas des
                  plugins de la v1.0), la valeur par défaut est 0.
               </p>
               <p>
                  Il est néanmoins possible d’ajouter la gestion de
                  l’utilisateur dans les <code>XPageApps</code> implémentant
                  l’ancienne interface de base
                  <code>XPageSecureApplication</code> en appelant explicitement
                  les méthodes du <code>SecurityService</code> pour obtenir
                  l’identité de l’utilisateur.
               </p>
           </subsection>

           <subsection name="Gestion de l’accès à l’application grâce aux rôles">
               <p>
                   Un autre moyen, depuis Nabla 1.3, permet de limiter l'accès
                   à l'application aux seuls utilisateurs disposant d'un rôle autorisé.
                   Ce dispositif est plus simple et offre une gestion plus fine que le
                   précédent.
               </p>
               <p>
                   Pour mettre en oeuvre cet accès restreint, il suffit de définir les
                   rôles autorisés dans le fichier du plugin de l'application comme
                   suit :
               </p>
               <p>
                   <div class="source">
<pre>
   &lt;application&gt;
     &lt;application-class&gt;com.nabla.project.plugins.myplugin.MyApp&lt;/application-class&gt;
     &lt;application-roles&gt;role1,role2,admin&lt;/application-roles&gt;
   &lt;/application&gt;</pre>
                   </div>
               </p>

           </subsection>

           <subsection name="Gestion de l’utilisateur dans l’application">
               <p>
                  Lors d’une connexion à une application Nabla, il y a
                  vérification du mode d’authentification de l’application
                  (ou plugin).
               </p>
               <p>
                  <ol>
                      <li>
                           Si l’application ne requiert pas d’authentification,
                           alors l’utilisateur a accès librement aux fonctionnalités
                           de l’application (cas actuellement du plugin contact).
                      </li>
                      <li>
                           Si dans le fichier de configuration du plugin,
                           il a été défini que l’application devait être accessible
                           uniquement à une population autorisée, alors les actions
                           suivantes sont entreprises :
                          <ul>
                              <li>
                                  détection dans la session des paramètres d’authentification.
                              </li>
                              <li>
                                  si l’utilisateur n’est pas encore authentifié,
                                  redirection vers une page d’authentification propre à
                                  Nabla commune à toutes les applications.
                              </li>
                              <li>
                                  si l’utilisateur est authentifié, et l’application
                                  n’est pas autorisée pour cet
                                  utilisateur, redirection vers une page d’erreur.
                              </li>
                              <li>
                                  si l’utilisateur est authentifié et l’application
                                  est autorisée pour cet utilisateur, on le redirige
                                  vers la page d’accueil de l’application.
                              </li>
                          </ul>
                      </li>
                  </ol>
               </p>
               <p>
                  L'implémentation de ce mécanisme est la suivante :
               </p>
               <p>
                   <center>
                       <img src="images/security008.gif" />
                   </center>
               </p>
               <p>
                   Dans le cas où le dispositif d'authentification est interne :
               </p>
               <p>
                  <center>
                      <img src="images/security009.gif" />
                  </center>
               </p>
           </subsection>
       </section>

       <section name="Application sécurisée de test">
           <p>
               Un plugin "securedtestapp" a été réalisé pour tester
               et illustrer le comportement d’une application dont l’accès
               est restreint. Cette application affiche :
           </p>
           <p>
              <ul>
                  <li>le nom du service d'authentification utilisé.</li>
                  <li>les informations disponibles concernant l'utilisateur.</li>
                  <li>les rôles éventuellement accessibles de l'utilisateur.</li>
              </ul>
           </p>
           <p>
              <center>
                  <img src="images/security010.gif" />
              </center>
           </p>
      </section>
      <section name="Récapitulatif et memento de configuration">
          <p>
              <table>
                  <tr>
                      <th>Contexte de sécurité souhaité / Paramétrage correspondant </th>
                  </tr>
                  <tr>
                      <td>
                          <strong><em>
                          L'authentification du portail n'est pas gérée. Toutes les
                          pages et applications sont publiques :
                          </em></strong>
                      </td>
                  </tr>
                  <tr>
<td><pre>Dans mynabla.properties :
mynabla.authentication.enable=false</pre></td>
                  </tr>
                  <tr>
                      <td>
                          <strong><em>
                          L'ensemble du portail doit être soumis à une authentification :
                          </em></strong>
                      </td>
                  </tr>
                  <tr>
                      <td>
<pre>Dans  mynabla.properties :
mynabla.authentication.enable=true
mynabla.authentication.class=&lt; classe module authentification &gt;
mynabla.portal.authentication.required=true
</pre>
                      </td>
                  </tr>
                  <tr>
                      <td>
                          <strong><em>
                          L'application nécessite impérativement une authentification
                          mais sans recourir à une gestion des rôles des utilisateurs :
                          </em></strong>
                      </td>
                  </tr>
                  <tr>
                      <td>
<pre>Dans  mynabla.properties :
mynabla.authentication.enable=true
mynabla.authentication.class=&lt; classe module authentification &gt;

Dans le fichier XML du plugin de l'application :
   &lt;application-security-model&gt;1&lt;/application-security-model&gt;
</pre>
                      </td>
                  </tr>
                  <tr>
                      <td>
                          <strong><em>
                          L'application nécessite impérativement une authentification
                          et n'est accessible qu'à des utilisateurs disposants
                          de rôles particuliers :
                          </em></strong>
                      </td>
                  </tr>
                  <tr>
                      <td>

<pre>Dans  mynabla.properties :
mynabla.authentication.enable=true
mynabla.authentication.class=&lt; classe module authentification &gt;

Dans le fichier XML du plugin de l'application :
     &lt;application-roles&gt;role1,role2,admin&lt;/application-roles&gt;
</pre>
                      </td>
                  </tr>
                  <tr>
                      <td>
                          <strong><em>
                          Certaines parties de l'application sont gérées en fonction
                          de rôles associés aux utilisateurs :
                          </em></strong>
                      </td>
                  </tr>
                  <tr>
                      <td>
<pre>Dans  mynabla.properties :
mynabla.authentication.enable=true
mynabla.authentication.class=&lt; classe module authentification &gt;

Dans le code de l'application :
- Tester si l'utilisateur dispose du rôle pour
  la fonction donnée avec "isUserInRole()"
- Forcer l'authentification de l'utilisateur
  avec "throw new UserNotSignedException()" si
  celui-ci ne s'est pas encore identifié.
</pre>
                      </td>
                  </tr>
              </table>
          </p>
      </section>
  </body>
</document>
