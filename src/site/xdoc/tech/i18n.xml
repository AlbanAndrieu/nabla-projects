<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>
            Nabla : Development Guide : Nabla plugins
        </title>
    </properties>
    <body>
        <section name="Internationalization (i18n)">
            <subsection name="Resource localization">
                <p>
                     The mechanism of localisation for labels and messages is based on the recommendations and
                     tools offered by the Java API. The files containing the localized resources are text "properties" files with
                     a suffix indicating the language and possibly the country.
                     Those files are loaded by the class <code> ResourceBundle </code> that
                     will choose according to the <em>locale</em> the right localized strings.
                     Here are suffix rules :
                </p>
            <p>
                <ul>
                    <li><code>myplugin_messages.properties</code> - Default language</li>
                    <li><code>myplugin_messages_fr.properties</code> - French</li>
                    <li><code>myplugin_messages_fr_FR.properties</code> - French (France)</li>
                    <li><code>myplugin_messages_fr_CA.properties</code> - French (Canada)</li>
                    <li><code>myplugin_messages_en_US.properties</code> - English (United States)</li>
                    <li><code>...</code></li>
                </ul>
            </p>
            </subsection>
            <subsection name="Rules for message bundles" >
                To find in which file is located a resource key, bundle's file name and location should
                respect strictly the following rules depending on the component type (core, plugin, module of a plugin) :
                
                <h4>Subsystem of the core</h4>
                <table>
                    <tr>
                        <td>File's name</td>
                        <td><em>&lt;sous-systeme&gt;</em>_messages.properties</td>
                    </tr>
                    <tr>
                        <td>File's location</td>
                        <td>com.nabla.project.portal.resources</td>
                    </tr>
                    <tr>
                        <td>Key's structure</td>
                        <td>portal.<em>&lt;subsystem&gt;</em>.<em>&lt;key&gt;</em></td>
                    </tr>
                </table>
                
                <h4>Plugin</h4>
                <table>
                    <tr>
                        <td>File name</td>
                        <td><em>&lt;plugin&gt;</em>_messages.properties</td>
                    </tr>
                    <tr>
                        <td>File location</td>
                        <td>com.nabla.project.portal.<em>&lt;plugin&gt;</em>.resources</td>
                    </tr>
                    <tr>
                        <td>Key structure</td>
                        <td><em>&lt;plugin&gt;</em>.<em>&lt;key&gt;</em></td>
                    </tr>
                </table>
                
                <h4>Module of a Plugin</h4>
                <table>
                    <tr>
                        <td>File's name</td>
                        <td><em>&lt;module&gt;</em>_messages.properties</td>
                    </tr>
                    <tr>
                        <td>File's location</td>
                        <td>com.nabla.project.portal.<em>&lt;plugin&gt;</em>.modules.<em>&lt;module&gt;</em>.resources</td>
                    </tr>
                    <tr>
                        <td>Key's structure</td>
                        <td>module.<em>&lt;plugin&gt;</em>.<em>&lt;module&gt;</em>.<em>&lt;key&gt;</em></td>
                    </tr>
                </table>
            </subsection>
            <subsection name="Localizing templates" >
                <p>
                    Templates are localized on load by the method <code>AppTemplateService.getTemplate( ... , Locale locale , ... )</code>.
                    Keys should be embraced and prefixed by <code><strong>#i18n</strong></code>.
                </p>
                <p>
                    Templates keys should respect this structure :
                <table>
                    <tr>
                        <th>Bundle's prefix</th>
                        <th>Template's name</th>
                        <th>Name of the label or input</th>
                    </tr>
                    <tr>
                        <td>
                            portal.<em>&lt;subsystem&gt;</em>. <br />
                            <em>&lt;plugin&gt;</em> <br />
                            module.<em>&lt;plugin&gt;</em>.<em>&lt;module&gt;</em>. 
                        </td>
                        <td>
                            manage_myobjects<br />
                            create_myobject
                        </td>
                        <td>
                            titleObjectList<br />
                            labelName<br />
                            buttonCreate
                        </td>
                    </tr>
                </table>
                    
                </p>
                <p>
                    <div class="source">
                        <pre>
&lt;h2&gt;#i18n{document.create_document.title} « ${document_type} »&lt;/h2&gt;
&lt;div class="highlight-box"&gt;
    &lt;p&gt;
         &lt;label for="document_title"&gt;<strong>#i18n{document.create_document.labelDocumentTitle}</strong>* : &lt;/label&gt;
         &lt;input type="text" name="document_title" size="80" maxlength="255"/&gt; 
         <strong>#i18n{document.create_document.helpDocumentTitle}</strong>
    &lt;/p&gt;
 ...                      </pre>
                    </div>
                </p>
            </subsection>
            
            <subsection name="Localization in Java code" >
                <p>
                    In the code, the <code>I18nService</code> can be used to localize strings
                    according the current locale. NB : To respect coding rules, keys must be declared
                    as constants as follows :
                </p>
                <p>
                    <div class="source">
                        <pre>
private static final PROPERTY_MESSAGE_MYMESSAGE = "myplugin.myMessage";

...
    String strLocalizedMessage = I18nService.getLocalizedString ( PROPERTY_MESSAGE_MYMESSAGE , locale );
...
                        </pre>
                    </div>
                </p>
            </subsection>
            
        </section>
    </body>
</document>