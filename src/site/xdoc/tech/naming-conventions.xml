<?xml version="1.0" encoding="UTF-8"?>
  <document>
   <properties>
    <title>
      Nabla : Developement Standards: Naming rules
    </title>
   </properties>
  <body>

      <section name="Naming rules">
          <p>
              All the rules hereby described should be verified with the
              help of <a href="http://checkstyle.sourceforge.net/">checkstyle</a>
             and <a href="http://pmd.sourceforge.net//">PMD</a>.
              These tools must be configured, in order to be compatible
              with the specific naming rules, by using the configuration
              files delivered by the DSTI.
          </p>

          <subsection name="General Principles">
              <p>
                The identifiers name must follow the following rules :
              </p>
              <p>
                 <ul>
                     <li>Be commonly employed to identify the object</li>
                     <li>Not bring confusion or absurdity</li>
                     <li>Be in english language</li>
                     <li>Never truncated or compressed</li>
                 </ul>
              </p>
              <p>
                 Do not use constants or variables to store a hard copy
                 of the error message prefixed(use specific properties files).
                 As long as possible, avoid hard copy values, maximize
                 use of properties files ( application or plugin).
              </p>
              <p>
                Do not use absolute paths (the only absolute paths used
                are stored in the parameters of the config.properties).
              </p>

          </subsection>

          <subsection name="Variables">
              <p>
                 The Java base types must be prefixed as follows:
              </p>
              <p>
                 <table>
                     <tr>
                         <th>Prefix</th>
                         <th>Type</th>
                     </tr>
                     <tr>
                         <td>n</td>
                         <td>int</td>
                     </tr>
                     <tr>
                         <td>str</td>
                         <td>String</td>
                     </tr>
                     <tr>
                         <td>b</td>
                         <td>boolean</td>
                     </tr>
                     <tr>
                         <td>l</td>
                         <td>long</td>
                     </tr>
                 </table>
              </p>
              <p>
                 An object must be prefixed by the name of the
                 class or the representative part of the class indicating clearly
                 the type of the object.
              </p>
              <p>
	             <table>
                     <tr>
                         <th>Class</th>
                         <th>Example of the class instance </th>
                     </tr>
                     <tr>
                         <td>HtmlTemplate</td>
                         <td>tList</td>
                     </tr>
                     <tr>
                         <td>StringBuffer</td>
                         <td>sbXml</td>
                     </tr>
                     <tr>
                         <td>Date</td>
                         <td>dateBegin</td>
                     </tr>
                     <tr>
                         <td>List, ArrayList</td>
                         <td>listUsers</td>
                     </tr>
                  </table>
              </p>
              <p>
                 Nomenclature : Hungarian notation except lower case initials
                 ,no underscores. Avoid abbreviations.
              </p>
              <p>
                 The instance variables (static or not) must be prefixed by
                an underscore.
              </p>
          </subsection>

          <subsection name="Constants">
             <p>
                Every string or numerical values should be placed in a constant.
                The declaration of these constants must be done in the first lines
                of the sourcecode or in a particular class containing the constants.

             </p>
             <p>
                The prefixes must indicate the nature of the constants.
                Commonly used prefixes are :
             </p>
             <p>
                <table>
                    <tr>
                        <th>Prefixe</th>
                        <th>Type</th>
                    </tr>
                    <tr>
                        <td>PATH_</td>
                        <td>For folder paths</td>
                    </tr>
                    <tr>
                        <td>PROPERTY_</td>
                        <td>For a key value of a .properties file</td>
                    </tr>
                    <tr>
                        <td>TEMPLATE_</td>
                        <td>For the html template name</td>
                    </tr>
                    <tr>
                        <td>BOOKMARK_</td>
                        <td>For a bookmark in the html template that can be substituted</td>
                    </tr>
                    <tr>
                        <td>MESSAGE_</td>
                        <td>For all messages or message keys used be Message.jsp</td>
                    </tr>
                    <tr>
                        <td>JSP_URL_</td>
                        <td>For JSP urls</td>
                    </tr>
                    <tr>
                        <td>PARAMETER_</td>
                        <td>For the name of a parameter in the HTTP request</td>
                    </tr>
                </table>
             </p>
             <p>
                Nomenclature of constants : every caracter in upper case,
                words seperated by underscores.
             </p>
             <p>
                For a big plugin, the constants will be collected in
                a class <code>com.nabla.project.plugins.myplugins.web.Constants</code>.
             </p>
          </subsection>

      <subsection name="Database objects">
          <p>
              All table's and column's names should be in low caps with words separated by an underscore character.
              All table's name should begin by "&lt;plugin name&gt;_" except for the core tables that begin by "core_".
          </p>
      </subsection>

          <subsection name="The SQL requests">
              <p>
                The SQL requests from DAO classes (business layer) must
                be declared as String variables and must respect the
                following format :
             </p>
             <p>
                <ul>
                    <li>Key words in upper case (SELECT, UPDATE, WHERE , AND ...),</li>
                    <li>columns name in lower case,</li>
                    <li>column name aliases are represented as alphabets</li>
                </ul>
             </p>
             <p>
		        Syntax example:
            </p>
            <p>
               <div class="source">
                   <pre>
String strSQL = "SELECT a.id_theme, a.description_theme \
                 FROM theme a, theme_newsletter b WHERE \
                 a.id_theme = b.id_theme and b.id_newsletter = ? ";</pre>
                 </div>
             </p>

         </subsection>

         <subsection name="Templates files">
              <p>
                 Extension : .html
              </p>
              <p>
                  Format : in lower case, words seperated by
                  underscores, no use of hyphens ,english language , no  abbreviation
              </p>

              <p>
                 Naming rules for files having a standard purpose :
                 <code>create_&lt;feature&gt;.html</code> for viewing
                 a page for creation,
                 <code>modify_&lt;feature&gt;.html</code> for viewing
                 a modification page,
                 <code>remove_&lt;feature&gt;.html</code> for viewing
                 a page enabling a deletion,
                 <code>manage_&lt;feature&gt;.html</code> for viewing
                 a management page,
                 <code>view_&lt;feature&gt;.html</code>  for viewing
                 a datasheet page
                 , <code>confirm_&lt;feature&gt;.html</code> for viewing
                 a message confirmation page,
                 <code>&lt;feature&gt;_list.html</code> for viewing
                 a page containing a list,
                 <code>&lt;feature&gt;_row.html</code> for viewing
                 a line of a list.
              </p>

              <p>
                 Naming rule for bookmarks used during substitution by corresponding
                 values: english language,low case, words seperated by underscores,
                 no abbreviation nor hyphens (eg: <code>@file_name@</code>)
              </p>
          </subsection>

          <subsection name="JSP files">
             <p>
                Nomenclature : Hungarian notation, english language, no abbreviations
                ,no hyphens, no underscores.
             </p>
             <p>
                Rules for naming the files which are used for standard processing
                purpose:<code>Create&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a creation form
                , <code>Modify&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a modification form
                <code>Remove&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a removal form
                <code>Manage&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a management form,
                <code>View&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a datasheet view form
                , <code>Confirm&lt;Feature&gt;.jsp</code>
                for pages used in view processing of a confirmation form
                 , <code>&lt;Feature&gt;List.jsp</code>
                 for pages used in view processing of a list form.
             </p>

             <p>
                Same naming rules for non visual Jsps, with the addition
                of the Do prefix (
                eg: <code>DoCreate&lt;Feature&gt;.jsp</code>,
                <code>DoModify&lt;Feature&gt;.jsp</code> ... )
             </p>
          </subsection>

          <subsection name="Image files">
             <p>
                Naming rules : english language, use of lower case and
                underscores between words, no hyphens nor abbreviation.
                The prefixed used must be in relation with the function of the
                image when it exists :
             </p>
             <p>
                <table>
                  <tr>
                      <th>Prefix</th>
                      <th>Type</th>
                  </tr>
                  <tr>
                      <td>b_</td>
                      <td>Images used as button</td>
                  </tr>
                  <tr>
                      <td>i_</td>
                      <td>Images used as icons (eg : i_delete.gif)</td>
                  </tr>
                  <tr>
                      <td>l_</td>
                      <td>Images of a line</td>
                  </tr>
                </table>
             </p>
             <p>
                The format of the images used for presentation purpose
                should be in a .gif format.
             </p>
        </subsection>

        <subsection name="Xml files">
            <p>
               The Xml tags used by the application must be in lower case
               , seperated by hyphens for composed word, in english language,
               without abbreviation.
            </p>

            <p>
               The name of the tags should must a close representation
               of the model : for example «portlet-id» for the tag
               storing the value of portlet identifier in the column
               <i>id_portlet</i> from <b>portlet</b> table.
             </p>
          </subsection>
       </section>
    </body>
</document>
